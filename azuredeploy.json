{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "diskstore",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks, must be lowercase"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of storage account you want created"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "contosoadm",
      "minLength": 1,
      "metadata": {
        "description": "Your admin username - this user will be a domain admin and a member of the IT security group"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Your admin password"
      }
    },
    "domainController01Name": {
      "type": "string",
      "defaultValue": "DC-01",
      "minLength": 1,
      "metadata": {
        "description": "The computer name of the first domain controller"
      }
    },
    "domainController01WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "What OS the first domain controller will run"
      }
    },
    "server01Name": {
      "type": "string",
      "defaultValue": "Server-01",
      "minLength": 1,
      "metadata": {
        "description": "The name of the generic Windows server being deployed"
      }
    },
    "server01WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "What OS the generic server will run"
      }
    },
    "domainController02Name": {
      "type": "string",
      "defaultValue": "DC-02",
      "minLength": 1,
      "metadata": {
        "description": "The computer name of the second domain controller"
      }
    },
    "domainController02WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "What OS the second domainController will run"
      }
    },
    "publicIP-domainController01DnsName": {
      "type": "string",
      "defaultValue": "pubipdc01",
      "minLength": 1
    },
    "publicIP-Server01DnsName": {
      "type": "string",
      "defaultValue": "pubipserver01",
      "minLength": 1
    },
    "publicIP-domainController02DnsName": {
      "type": "string",
      "defaultValue": "pubipdc02",
      "minLength": 1
    },
    "publicIP-fileServer01DnsName": {
      "type": "string",
      "defaultValue": "pubipfs01",
      "minLength": 1
    },
    "publicIP-fileServer02DnsName": {
      "type": "string",
      "defaultValue": "pubipfs02",
      "minLength": 1
    },
    "domainName": {
      "type": "string",
      "defaultValue": "contoso.com",
      "metadata": {
        "description": "The FQDN of the AD Domain created - e.g. Contoso.com"
      }
    },
    "assetLocation": {
      "type": "string",
      "defaultValue": "https://github.com/oradcliffe/AzureRm-Windows-Domain/raw/Updates22/",
      "metadata": {
        "description": "Where to find assets used in this template"
      }
    },
    "fileServer01Name": {
      "type": "string",
      "defaultValue": "FS-01",
      "minLength": 1
    },
    "fileServer01WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "fileServer02Name": {
      "type": "string",
      "defaultValue": "FS-02",
      "minLength": 1
    },
    "fileServer02WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    }

  },
  "variables": {
    "VNetName": "VNet1",
    "VNet1Prefix": "192.168.0.0/16",
    "VNet1Subnet1Name": "Production",
    "VNet1Subnet1Prefix": "192.168.95.0/24",
    "VNet1Subnet2Name": "Future",
    "VNet1Subnet2Prefix": "192.168.96.0/24",
    "storageAccountName": "[concat(parameters('storageAccountName'), uniqueString(resourceGroup().id))]",
    "domainController01ImagePublisher": "MicrosoftWindowsServer",
    "domainController01ImageOffer": "WindowsServer",
    "domainController01OSDiskName": "domainController01OSDisk",
    "domainController01VmSize": "Standard_D2_v2",
    "domainController01VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "domainController01SubnetRef": "[concat(variables('domainController01VnetID'), '/subnets/', variables('VNet1Subnet1Name'))]",
    "domainController01StorageAccountContainerName": "vhds",
    "domainController01NicName": "[concat(parameters('domainController01Name'), 'Nic0')]",
    "Server01ImagePublisher": "MicrosoftWindowsServer",
    "Server01ImageOffer": "WindowsServer",
    "Server01OSDiskName": "Server01OSDisk",
    "Server01VmSize": "Standard_D2_v2",
    "Server01VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "Server01SubnetRef": "[concat(variables('Server01VnetID'), '/subnets/', variables('VNet1Subnet1Name'))]",
    "Server01StorageAccountContainerName": "vhds",
    "Server01NicName": "[concat(parameters('Server01Name'), 'Nic0')]",
    "domainController02ImagePublisher": "MicrosoftWindowsServer",
    "domainController02ImageOffer": "WindowsServer",
    "domainController02OSDiskName": "domainController02OSDisk",
    "domainController02VmSize": "Standard_D2_v2",
    "domainController02VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "domainController02SubnetRef": "[concat(variables('domainController02VnetID'), '/subnets/', variables('VNet1Subnet1Name'))]",
    "domainController02StorageAccountContainerName": "vhds",
    "domainController02NicName": "[concat(parameters('domainController02Name'), 'Nic0')]",
    "fileServer01ImagePublisher": "MicrosoftWindowsServer",
    "fileServer01ImageOffer": "WindowsServer",
    "fileServer01OSDiskName": "fileServer01OSDisk",
    "fileServer01VmSize": "Standard_D2_v2",
    "fileServer01VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "fileServer01SubnetRef": "[concat(variables('fileServer01VnetID'), '/subnets/', variables('VNet1Subnet1Name'))]",
    "fileServer01StorageAccountContainerName": "vhds",
    "fileServer01NicName": "[concat(parameters('fileServer01Name'), 'Nic0')]",
    "fileServer02ImagePublisher": "MicrosoftWindowsServer",
    "fileServer02ImageOffer": "WindowsServer",
    "fileServer02OSDiskName": "fileServer02OSDisk",
    "fileServer02VmSize": "Standard_D2_v2",
    "fileServer02VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "fileServer02SubnetRef": "[concat(variables('fileServer02VnetID'), '/subnets/', variables('VNet1Subnet1Name'))]",
    "fileServer02StorageAccountContainerName": "vhds",
    "fileServer02NicName": "[concat(parameters('fileServer02Name'), 'Nic0')]",
    "publicIP-domainController01Name": "publicIP-domainController01",
    "publicIP-Server01Name": "publicIP-Server01",
    "publicIP-domainController02Name": "publicIP-domainController02",
    "publicIP-fileServer01Name": "publicIP-fileServer01",
    "publicIP-fileServer02Name": "publicIP-fileServer02",
    "privateIP-domainController01": "192.168.95.10",
    "privateIP-Server01": "192.168.95.11",
    "privateIP-domainController02": "192.168.95.12",
    "privateIP-fileServer01": "192.168.95.13",
    "privateIP-fileServer02": "192.168.95.14",
    "dc01DscUrl": "[concat(parameters('assetLocation'),'DSC/DC01.ps1.zip')]",
    "dc02DscUrl": "[concat(parameters('assetLocation'),'DSC/DC02.ps1.zip')]",
    "fs01DscUrl": "[concat(parameters('assetLocation'),'DSC/FS01.ps1.zip')]",
    "fs02DscUrl": "[concat(parameters('assetLocation'),'DSC/FS02.ps1.zip')]",
    "domainController01DSCscript": "DC01.ps1",
    "domainController01DSCfunction": "DC01",
    "domainController02DSCscript": "DC02.ps1",
    "domainController02DSCfunction": "DC02",
    "fileServer01DSCscript": "FS01.ps1",
    "fileServer01DSCfunction": "FS01",
    "fileServer02DSCscript": "FS02.ps1",
    "fileServer02DSCfunction": "FS02",
    "adPopulationData": "populationData.psd1",
    "vnetTemplateUri": "[concat(parameters('assetLocation'),'nestedTemplates/vnet-with-dns-server.json')]",
    "nicTemplateUri": "[concat(parameters('assetLocation'),'nestedTemplates/Internal-nic-with-dns-update.json')]"
  },
  "resources": [
    {
      "name": "[variables('VNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "VNet1"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNet1Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('VNet1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('VNet1Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('VNet1Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('VNet1Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "storageAccount"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[variables('domainController01NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-domainController01Name'))]"
      ],
      "tags": {
        "displayName": "domainController01Nic"
      },
      "properties": {
        "IPConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('privateIP-domainController01')]",
              "subnet": {
                "id": "[variables('domainController01SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-domainController01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('domainController01Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('domainController01NicName'))]"
      ],
      "tags": {
        "displayName": "domainController01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('domainController01VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('domainController01Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('domainController01ImagePublisher')]",
            "offer": "[variables('domainController01ImageOffer')]",
            "sku": "[parameters('domainController01WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "domainController01OSDisk",
            "vhd": {
              "uri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('domainController01StorageAccountContainerName'), '/', variables('domainController01OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('domainController01NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CreateFirstdomainController",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('domainController01Name'))]"
          ],
          "tags": {
            "displayName": "domainController01DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.21",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",
              "configuration": {
                "url": "[variables('dc01DscUrl')]",
                "script": "[variables('domainController01DSCscript')]",
                "function": "[variables('domainController01DSCfunction')]"
              },
              "configurationArguments": {
                "domainName": "[parameters('domainName')]",
                "adminCreds": {
                  "userName": "[parameters('adminUserName')]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            },
            "protectedSettings": {}
          }
        }
      ]
    },
    {
      "name": "[variables('Server01NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-Server01Name'))]"
      ],
      "tags": {
        "displayName": "Server01Nic"
      },
      "properties": {
        "IPConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('privateIP-Server01')]",
              "subnet": {
                "id": "[variables('Server01SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-Server01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('Server01Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('Server01NicName'))]"
      ],
      "tags": {
        "displayName": "Server01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('Server01VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('Server01Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('Server01ImagePublisher')]",
            "offer": "[variables('Server01ImageOffer')]",
            "sku": "[parameters('Server01WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "Server01OSDisk",
            "vhd": {
              "uri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('Server01StorageAccountContainerName'), '/', variables('Server01OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Server01NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Server1JoinDomain",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('Server01Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('domainController01Name'),'/extensions/CreateFirstdomainController')]",
            "Microsoft.Resources/deployments/updatenicdns",
            "Microsoft.Resources/deployments/updatenetdns"
          ],
          "tags": {
            "displayName": "Server01JoinDomain"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "User": "[concat(parameters('domainName'), '\\', parameters('adminUserName'))]",
              "Restart": "true",
              "Options": "3"
            },
            "protectedSettings": {
              "password": "[parameters('adminPassword')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('domainController02NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-domainController02Name'))]"
      ],
      "tags": {
        "displayName": "domainController02Nic"
      },
      "properties": {
        "IPConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('privateIP-domainController02')]",
              "subnet": {
                "id": "[variables('domainController02SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-domainController02Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('domainController02Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('domainController02NicName'))]"
      ],
      "tags": {
        "displayName": "domainController02"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('domainController02VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('domainController02Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('domainController02ImagePublisher')]",
            "offer": "[variables('domainController02ImageOffer')]",
            "sku": "[parameters('domainController02WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "domainController02OSDisk",
            "vhd": {
              "uri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('domainController02StorageAccountContainerName'), '/', variables('domainController02OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('domainController02NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CreateSeconddomainController",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('domainController02Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('Server01Name'),'/extensions/Server1JoinDomain')]",
            "Microsoft.Resources/deployments/updatenicdns",
            "Microsoft.Resources/deployments/updatevnetdns"
          ],
          "tags": {
            "displayName": "domainController02DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.21",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",
              "configuration": {
                "url": "[variables('dc02DscUrl')]",
                "script": "[variables('domainController02DSCscript')]",
                "function": "[variables('domainController02DSCfunction')]"
              },
              "configurationdata": {
                "url": "[concat(parameters('assetLocation'), variables('adPopulationData'))]"
              },
              "configurationArguments": {
                "domainName": "[parameters('domainName')]",
                "adminCreds": {
                  "userName": "[parameters('adminUserName')]",
                  "password": "[parameters('adminPassword')]"
                }
              }
            },
            "protectedSettings": {}
          }
        }
      ]
    },
    {
      "name": "[variables('fileServer01NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]"
      ],
      "tags": {
        "displayName": "fileServer01Nic"
      },
      "properties": {
        "IPConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('privateIP-fileServer01')]",
              "subnet": {
                "id": "[variables('fileServer01SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-fileServer01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('fileServer01Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('fileServer01NicName'))]"
      ],
      "tags": {
        "displayName": "fileServer01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('fileServer01VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('fileServer01Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('fileServer01ImagePublisher')]",
            "offer": "[variables('fileServer01ImageOffer')]",
            "sku": "[parameters('fileServer01WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "fileServer01OSDisk",
            "vhd": {
              "uri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('fileServer01StorageAccountContainerName'), '/', variables('fileServer01OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fileServer01NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "fileServer01DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('fileServer01Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('Server01Name'),'/extensions/Server1JoinDomain')]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('domainController02Name'),'/extensions/CreateSeconddomainController')]"
          ],
          "tags": {
            "displayName": "fileServer01DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.21",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",
              "configuration": {
                "url": "[variables('fs01DscUrl')]",
                "script": "[variables('fileServer01DSCscript')]",
                "function": "[variables('fileServer01DSCfunction')]"
              },
              "configurationdata": {
                "url": "[concat(parameters('assetLocation'), variables('adPopulationData'))]"
              },
              "configurationArguments": {
                "domainName": "[parameters('domainName')]",
                "adminCreds": {
                  "userName": "[parameters('adminUserName')]",
                  "password": "[parameters('adminPassword')]"
                }
              }
            },
            "protectedSettings": {}
          }
        }
      ]
    },
    {
      "name": "[variables('fileServer02NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]"
      ],
      "tags": {
        "displayName": "fileServer02Nic"
      },
      "properties": {
        "IPConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('privateIP-fileServer02')]",
              "subnet": {
                "id": "[variables('fileServer02SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-fileServer02Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('fileServer02Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('fileServer02NicName'))]"
      ],
      "tags": {
        "displayName": "fileServer02"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('fileServer02VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('fileServer02Name')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Central Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('fileServer02ImagePublisher')]",
            "offer": "[variables('fileServer02ImageOffer')]",
            "sku": "[parameters('fileServer02WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "fileServer02OSDisk",
            "vhd": {
              "uri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('fileServer02StorageAccountContainerName'), '/', variables('fileServer02OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fileServer02NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "fileServer02DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('fileServer02Name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('Server01Name'),'/extensions/Server1JoinDomain')]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('fileServer01Name'),'/extensions/fileServer01DSC')]"
          ],
          "tags": {
            "displayName": "fileServer02DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.21",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",
              "configuration": {
                "url": "[variables('fs02DscUrl')]",
                "script": "[variables('fileServer02DSCscript')]",
                "function": "[variables('fileServer02DSCfunction')]"
              },
              "configurationdata": {
                "url": "[concat(parameters('assetLocation'), variables('adPopulationData'))]"
              },
              "configurationArguments": {
                "domainName": "[parameters('domainName')]",
                "fs01ComputerName": "[parameters('fileServer01Name')]",
                "fs02ComputerName": "[parameters('fileServer02Name')]",
                "adminCreds": {
                  "userName": "[parameters('adminUserName')]",
                  "password": "[parameters('adminPassword')]"
                }
              }
            },
            "protectedSettings": {}
          }
        }
      ]
    },
    {
      "name": "[variables('publicIP-domainController01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP-domainController01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIP-domainController01DnsName')]"
        }
      }
    },
    {
      "name": "[variables('publicIP-Server01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP-Server01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIP-Server01DnsName')]"
        }
      }
    },
    {
      "name": "[variables('publicIP-domainController02Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP-domainController02"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIP-domainController02DnsName')]"
        }
      }
    },
    {
      "name": "[variables('publicIP-fileServer01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP-fileServer01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIP-fileServer01DnsName')]"
        }
      }
    },
    {
      "name": "[variables('publicIP-fileServer02Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "publicIP-fileServer02"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIP-fileServer02DnsName')]"
        }
      }
    },
    {
      "name": "updatevnetdns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('domainController01Name'),'/extensions/CreateFirstdomainController')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('VNetName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('VNet1Prefix')]"
          },
          "subnet1Name": {
            "value": "[variables('VNet1Subnet1Name')]"
          },
          "subnet1Range": {
            "value": "[variables('VNet1Subnet1Prefix')]"
          },
          "subnet2Name": {
            "value": "[variables('VNet1Subnet2Name')]"
          },
          "subnet2Range": {
            "value": "[variables('VNet1Subnet2Prefix')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('privateIP-domainController01')]"//,
              //"[variables('privateIP-domainController02')]"
            ]
          }
        }
      }
    },
    {
      "name": "updatenicdns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('domainController01Name'),'/extensions/CreateFirstdomainController')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverNicName": {
            "value": "[variables('Server01NicName')]"
          },
          "domainController02NicName": {
            "value": "[variables('domainController02NicName')]"
          },
          "fileServer01NicName": {
            "value": "[variables('fileServer01NicName')]"
          },
          "fileServer02NicName": {
            "value": "[variables('fileServer02NicName')]"
          },
          "serverIPConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('privateIP-Server01')]",
                  "subnet": {
                    "id": "[variables('Server01SubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-Server01Name'))]"
                  }
                }
              }
            ]
          },
          "domainController02IPConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('privateIP-domainController02')]",
                  "subnet": {
                    "id": "[variables('domainController02SubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-domainController02Name'))]"
                  }
                }
              }
            ]
          },
          "fileServer01IPConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('privateIP-fileServer01')]",
                  "subnet": {
                    "id": "[variables('fileServer01SubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-fileServer01Name'))]"
                  }
                }
              }
            ]
          },
          "fileServer02IPConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[variables('privateIP-fileServer02')]",
                  "subnet": {
                    "id": "[variables('fileServer02SubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP-fileServer02Name'))]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[variables('privateIP-domainController01')]"/*,
              "[variables('privateIP-domainController02')]"*/
            ]
          }
        }
      }
    }
  ]
}
